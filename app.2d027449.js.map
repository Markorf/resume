{"version":3,"sources":["src/ts/cvData.ts","src/ts/app.ts"],"names":[],"mappings":";AAAa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAS,CACpB,KAAM,cACN,SAAU,gCACV,OAAQ,CACN,QACA,OACA,OACA,KACA,KACA,QACA,MACA,UACA,MACA,YACA,QACA,gBAEF,MAAO,0BACP,OAAQ,6BACR,SAAU;;;;ACiHZ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IApIA,IAAA,EAAA,QAAA,YACA,QAAA,sBAEA,IAAM,EAAS,SAAS,cAAc,WAChC,EAAa,SAAS,cAAc,gBACpC,EAAe,EAAW,cAAc,iBACxC,EAAa,EAAW,iBAAiB,eAc/C,SAAS,IACA,OAAA,EAAiB,GAG1B,SAAS,IACP,SAAS,KACP,sEAGJ,SAAS,IACP,OAAO,KACL,wFAIJ,SAAS,EAAiB,GAiG1B,IAAA,EAAA,EAhGM,EAAe,UAAU,SAAS,cACpC,EAAe,UAAU,OAAO,aACJ,QAA5B,EAAA,EAAe,qBAAa,IAAA,GAAA,EAAE,UAAU,OAAO,YAE/C,EAAe,UAAU,IAAI,aACD,QAA5B,EAAA,EAAe,qBAAa,IAAA,GAAA,EAAE,UAAU,IAAI,WAIhD,SAAS,EAAS,GACV,IAAA,EAAY,OAAA,OAAA,GAAK,GAIlB,IAAA,IAAI,KAHT,EAAU,UAAY,EACtB,EAAU,QAAU,EACpB,EAAU,UAAY,EACD,EACnB,EAAW,EAAU,GAEhB,OAAA,EAGT,IAAM,EAAU,EAAS,EAAA,QAGzB,SAAS,EAAW,EAAkB,GAC9B,IAAA,EAAY,SAAS,cAAc,MACnC,EAAU,SAAS,cAAc,OACvC,EAAQ,UAAU,IAAI,cACtB,EAAQ,YAAc,OAAO,GAAY,IAEnC,IAAA,EAAW,SAAS,cAAc,OACxC,EAAS,UAAU,IAAI,eACjB,IAAA,EAAa,EAAa,EAAW,EAAY,GACvD,EAAS,UAAY,EACrB,EAAU,YAAY,GACtB,EAAU,YAAY,GAClB,aAAkB,QACpB,EAAO,YAAY,GAEnB,QAAQ,KAAQ,GAAA,OAAA,EAAhB,oBAIJ,SAAS,EACP,EACA,EACA,GAEM,IAAA,EAAe,EAAW,GAC5B,GAAuB,iBAAhB,EACL,OAAA,EAAa,WAAW,UAAY,EAAa,WAAW,OAC5B,2BAAA,OAAA,EAAiB,MAAA,OAAA,EAAnD,UAES,IAAA,OAAA,EAAX,MACK,GAAI,MAAM,QAAQ,GAAe,CACtC,EAAc,UAAU,IAAI,cACtB,IAAA,EAA2B,EAAa,IAAI,SAAA,GAAa,MAAA,KAAA,OAAA,EAAT,OAC3C,MAAA,IAAA,OAAA,EAAX,MACK,MAA2B,mBAAhB,GAChB,EAAc,MAAM,OAAS,UAC7B,EAAc,UAAU,IAAI,iBACT,YAAf,EACF,EAAc,iBAAiB,QAAS,WACtC,EAAW,YAEW,cAAf,EACT,EAAc,iBAAiB,QAAS,WACtC,EAAW,cAEW,cAAf,GACT,EAAc,iBAAiB,QAAS,WACtC,EAAW,cAGf,UAEW,IAAA,OAAA,OAAO,GAAlB,MAIJ,SAAS,IACD,IAAA,EAAgB,SAAS,cAAc,MACvC,EAAc,SAAS,cAAc,QAC3C,EAAY,YAAc,KAC1B,EAAY,UAAU,IAAI,WAC1B,EAAc,YAAY,GAC1B,EAAQ,YAAY,GAhEtB,IAmEA,IAAM,EAAc,SAAC,GAQrB,IAAA,EANoB,QAAlB,EADa,EAAE,OACV,qBAAa,IAAA,GAAA,EAAE,UAAU,IAAI,aAClC,EAAW,UAAU,SAAS,UAC1B,EAAW,UAAU,OAAO,UAC5B,EAAW,UAAU,IAAI,WAG/B,MAAA,GAAA,EAAY,QAAQ,SAAA,GAClB,OAAA,EAAU,iBAAiB,QAAS,SAAA,GAAK,OAAA,EAAY","file":"app.2d027449.js","sourceRoot":"..","sourcesContent":["export const cvData = {\n  name: \"Marko Medic\",\n  location: \"Novi Sad, Serbia (GMT/UTC +1)\",\n  skills: [\n    \"HTML5\",\n    \"CSS3\",\n    \"SCSS\",\n    \"JS\",\n    \"TS\",\n    \"REACT\",\n    \"VUE\",\n    \"NODE JS\",\n    \"PHP\",\n    \"WORDPRESS\",\n    \"MySQL\",\n    \"PHOTOSHOP...\"\n  ],\n  email: \"marko.medic59@gmail.com\",\n  github: \"https://github.com/Markorf\",\n  linkedIn: \"https://linkedin.com/in/marko-medic-119b99130\"\n};\n","import { cvData } from \"./cvData\";\nimport \"../scss/style.scss\";\n\nconst mainOl = document.querySelector(\"#cvList\");\nconst mainFooter = document.querySelector(\".main-footer\") as Element;\nconst aboutSection = mainFooter.querySelector(\"section.about\") as Element;\nconst closeIcons = mainFooter.querySelectorAll(\".close-icon\");\n\ninterface CV {\n  name: string;\n  skils: string[];\n  github: string;\n  email: string;\n  codepen: string;\n  aboutMe(): void | Function;\n  contactMe(): void | Function;\n  getResume(): void | Function;\n  [index: string]: string | string[] | Function;\n}\n\nfunction aboutMe() {\n  return toggleVisibility(aboutSection);\n}\n\nfunction contactMe() {\n  location.href =\n    \"mailto:marko.medic59@gmail.com?subject=Your title&body=Your message\";\n}\n\nfunction getResume() {\n  window.open(\n    \"https://drive.google.com/u/0/uc?id=1n_5Zlz1NVtOFiq7Xh94i6UWiiihhojAi&export=download\"\n  );\n}\n\nfunction toggleVisibility(currentElement: Element) {\n  if (currentElement.classList.contains(\"invisible\")) {\n    currentElement.classList.remove(\"invisible\");\n    currentElement.parentElement?.classList.remove(\"hidden\");\n  } else {\n    currentElement.classList.add(\"invisible\");\n    currentElement.parentElement?.classList.add(\"hidden\");\n  }\n}\n\nfunction getNewCV(passedData: any) {\n  const newObject = { ...passedData } as CV;\n  newObject.getResume = getResume;\n  newObject.aboutMe = aboutMe;\n  newObject.contactMe = contactMe;\n  for (let propName in newObject) {\n    appendData(propName, newObject);\n  }\n  return newObject;\n}\n\nconst newData = getNewCV(cvData);\ncreateLastListElement();\n\nfunction appendData(propName: string, passedData: CV) {\n  const liElement = document.createElement(\"li\");\n  const leftDiv = document.createElement(\"div\");\n  leftDiv.classList.add(\"divForName\");\n  leftDiv.textContent = String(propName) + \":\";\n  // razmak\n  const rightDiv = document.createElement(\"div\");\n  rightDiv.classList.add(\"divForValue\");\n  const textForDiv = getTextValue(liElement, passedData, propName);\n  rightDiv.innerHTML = textForDiv;\n  liElement.appendChild(leftDiv);\n  liElement.appendChild(rightDiv);\n  if (mainOl instanceof Element) {\n    mainOl.appendChild(liElement);\n  } else {\n    console.warn(`${mainOl} is not element`);\n  }\n}\n\nfunction getTextValue(\n  currentListEl: HTMLLIElement,\n  passedData: CV,\n  passedName: string\n) {\n  const currentValue = passedData[passedName];\n  if (typeof currentValue == \"string\") {\n    if (currentValue.startsWith(\"https\") || currentValue.startsWith(\"www\")) {\n      return `<a target=\"_blank\" href=${currentValue}>\"${currentValue}\",</a>`;\n    }\n    return `\"${currentValue},\"`;\n  } else if (Array.isArray(currentValue)) {\n    currentListEl.classList.add(\"arrayClass\");\n    const arrWithStrings: string[] = currentValue.map(skil => ` \"${skil}\"`);\n    return `[${arrWithStrings}],`;\n  } else if (typeof currentValue == \"function\") {\n    currentListEl.style.cursor = \"pointer\";\n    currentListEl.classList.add(\"functionClass\");\n    if (passedName === \"aboutMe\") {\n      currentListEl.addEventListener(\"click\", function() {\n        passedData.aboutMe();\n      });\n    } else if (passedName === \"contactMe\") {\n      currentListEl.addEventListener(\"click\", function() {\n        passedData.contactMe();\n      });\n    } else if (passedName === \"getResume\") {\n      currentListEl.addEventListener(\"click\", function() {\n        passedData.getResume();\n      });\n    }\n    return `{...},`;\n  } else {\n    return `\"${String(currentValue)}\",`;\n  }\n}\n\nfunction createLastListElement() {\n  const lastLiElement = document.createElement(\"li\");\n  const spanElement = document.createElement(\"span\");\n  spanElement.textContent = \"};\";\n  spanElement.classList.add(\"colored\");\n  lastLiElement.appendChild(spanElement);\n  mainOl!.appendChild(lastLiElement);\n}\n\nconst hideElement = (e: Event) => {\n  const elem = e.target as HTMLElement;\n  elem.parentElement?.classList.add(\"invisible\");\n  mainFooter.classList.contains(\"hidden\")\n    ? mainFooter.classList.remove(\"hidden\")\n    : mainFooter.classList.add(\"hidden\");\n};\n\ncloseIcons?.forEach(closeIcon =>\n  closeIcon.addEventListener(\"click\", e => hideElement(e))\n);\n"]}